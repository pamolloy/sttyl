Author:		Philip Molloy
Date:		March 10, 2012
Project:	sttyl terminal device setter and getter

Purpose:
	Print or change terminal characteristics.

System Interface:
	The termios functions, including tcgetattr and tcsetattr, provide
	access to a general terminal interface, which returns and changes
	settings using the termios structure. The structure contains four
	bit-mask fields that correspond to groups of terminal settings that
	are defined as integers.

	To print a control character use iscntrl to check the character and
	then use arithmetic (i.e. ascii.h) to calculate which character to
	print.

Data Structures:
	sttyl uses a table driven approach by moving an appropriate amount
	of the computational logic into control tables. 

	typedef enum { LOCAL, OUTPUT, INPUT, CONTROL } flagtype;

	struct table
	{
		char *name;
		tcflag_t mask;
		tcflagtype mode;
	};

Program Flow:
	- Get the parameters associated with the arguments and store them
	  in a termios structure using tcgetattr().
	- If no arguments are specified return the state of each setting in
	  termios structure and the baud rate using cfgetospeed()
	- If one or more arguments are specified on the command line then
	  change the settings with tcsetattr().
		- Use the TCSADRAIN argument with output settings.
		- Use the TCSAFLUSH argument ...
		- Use the TCASNOW argument ...
			//TODO When to use other arguments
		- If the argument is an integer, then set the baud rate using
		  cfsetospeed() with one of the constants.

//TODO Why are the arrays of flaginfo structures also declared as
	structures?
//TODO Use offsetof()
